@page "/users"
@inject Microsoft.AspNetCore.Components.NavigationManager NavMan
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@using AirShare;

<div>
    <table style="border: 1px solid black; width: 100%">
    @foreach(User usr in Core.GetUsers())
    {
        <tr>
            <td>@usr.Name</td>
            <td>@usr.Lvl</td>
            <td>
            @foreach(string p in @usr.Allowed)
            {
                <div> @p <br /> </div>
            }
            </td>
            <td>        
                <input type="button" @onclick="(() => Remove(usr.Name))" value="Remove" />
            </td>

        </tr>
    }
    </table>
</div>

<div>

    <br />

    Admin Name
    <input name="name" type="text" @bind="TxtName" />
    Admin Pass
    <input name="pass" type="password" @bind="TxtPass" />

    <br />

    New Name
    <input name="Newname" type="text" @bind="TxtNewName" />
    New Pass
    <input name="Newpass" type="password" @bind="TxtNewPass" />

    <br />
    Allowed Paths
    <textarea name="AllowedPaths" cols="40" rows="5" @bind="TxtPaths"></textarea>

    <input type="button" @onclick="(() => Add())" value="Add" />

    <h1> @msg </h1>

</div>

@code
{
    string msg {get;set;}
    string TxtName {get;set;}
    string TxtPass {get;set;}

    string TxtNewName {get;set;}
    string TxtNewPass {get;set;}
    string TxtPaths {get;set;} = "/\n\\";


    public void Add()
    {
        if(TxtNewName == null || TxtNewName.Length < 2) 
        {
            msg = "User name too short";
        }

        if( TxtNewPass == null || TxtNewPass.Length < 8) 
        {
            msg = "Password too short";
        }

        if( TxtPaths == null || TxtPaths.Length == 0) 
        {
            msg = "No paths are entered";
        }


        User usr = Core.Auth(TxtName, TxtPass);
        if( usr != null )
        {
            if( usr.Lvl == UserLevel.root )
            {

                msg = "Success " + Core.AddUser(TxtNewName, TxtNewPass, UserLevel.censored, TxtPaths );
                
                StateHasChanged();
            }
        }
        else
        {
            msg = "Wrong user name / password";
        }
    }

    public void Remove(string name)
    {

    }

}