@page "/hlnk/{PFileName}"
@inject Microsoft.AspNetCore.Components.NavigationManager NavMan
@using Microsoft.AspNetCore.Http
@using System.IO;
@namespace AirShare.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    //[Parameter] string PFileName ;

    string H = Uri.UnescapeDataString(HttpContext.Request.QueryString.Value.TrimStart('?')).Trim('"');
    HashLink HL = HashLinks.GetLink(H);

    if (HL == null)
    {
        HttpContext.Response.Clear();
        HttpContext.Response.StatusCode = 404;
        return;
    }



    if (HL.Type == HashLink.HashLinkType.File)
    {

        string url = HL.Data;

        Console.WriteLine("Hash Link Downloading " + url);
        FileInfo file = new FileInfo(url);

        HttpContext.Response.Clear();
        HttpContext.Response.Headers.Add("Content-Disposition", "attachment; filename=" + file.Name);
        HttpContext.Response.Headers.Add("Content-Length", (file.Length + 2).ToString());
        HttpContext.Response.ContentType = "application/octet-stream";
        await HttpContext.Response.SendFileAsync(new Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo(file));

    }
    else if (HL.Type == HashLink.HashLinkType.HashedDirectory)
    {
        HashedDirectory HD = Core.FromJSON<HashedDirectory>(HL.Data);

        Console.WriteLine("Hashed Directory Downloading " + HD.BasePath);

        string Name = System.IO.Path.GetFileName(HD.BasePath);



        HttpContext.Response.Clear();
        HttpContext.Response.Headers.Add("Content-Disposition", "attachment; filename=" + Name + HD.GetExtention());
        HttpContext.Response.ContentType = "application/octet-stream";
        // foreach (string s in HD.Enumerate())
        //{
        // await HttpContext.Response.WriteAsync(s);
        //}
        await HttpContext.Response.WriteAsync(HD.GenerateString());

    }



}
