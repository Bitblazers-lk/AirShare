// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AirShare.Pages.Controls
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using AirShare.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using AirShare.Pages.Controls;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\My Projects\C# Git\AirShare\AirShare\_Imports.razor"
using Xabe.FFmpeg;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\My Projects\C# Git\AirShare\AirShare\Pages\Controls\UserManager.razor"
using AirShare;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/users")]
    public partial class UserManager : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 92 "D:\My Projects\C# Git\AirShare\AirShare\Pages\Controls\UserManager.razor"
 
    string msg { get; set; }
    string TxtName { get; set; }
    string TxtPass { get; set; }

    string TxtNewName { get; set; }
    string TxtNewPass { get; set; }
    string TxtNewPass2 { get; set; }

    string Perm { get; set; } = "friend";
    string TxtPathsR { get; set; } = "\\";
    string TxtPathsRW { get; set; } = "";
    string TxtPathsRWX { get; set; } = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (Core.Authdetails.IsDefault)
        {
            msg = "Default Admin User Name is 'admin' password is 'pass' . They are entered. Type in your new password now ";
            TxtName = "admin";
            TxtPass = "pass";
            TxtNewName = "admin";
            Perm = "root";
        }
    }





    public void Add()
    {
        if (TxtNewName == null || TxtNewName.Length < 2)
        {
            msg = "User name too short";
            return;
        }

        if (TxtNewPass == null || TxtNewPass.Length < 6)
        {
            msg = "Password too short";
            return;
        }

        if (TxtNewPass2 != TxtNewPass)
        {
            msg = "Two Passwords doesn't match ";
            return;
        }

        //if (TxtPaths == null || TxtPaths.Length == 0)
        //{
        // msg = "No paths are entered";
        //}


        User usr = Core.Auth(TxtName, TxtPass);
        if (usr != null)
        {
            if (usr.Lvl == UserLevel.root)
            {
                UserLevel NUL;
                switch (Perm)
                {
                    case "guest":
                        NUL = UserLevel.guest;
                        TxtPathsR = "";
                        TxtPathsRW = "";
                        TxtPathsRWX = "";
                        break;

                    case "friend":
                        NUL = UserLevel.friend;
                        break;

                    case "root":
                        NUL = UserLevel.root;
                        TxtPathsR = "";
                        TxtPathsRW = "";
                        TxtPathsRWX = "/\n\\";
                        Core.Authdetails.IsDefault = false;
                        break;

                    default:
                        msg = $"Permission Level {Perm} is not valid";
                        StateHasChanged();
                        return;
                }

                if (usr.Name == TxtNewName)
                {
                    NUL = UserLevel.root;
                }

                User newusr = Core.AddUser(TxtNewName, TxtNewPass, NUL, TxtPathsR, TxtPathsRW, TxtPathsRWX);
                msg = $"Success adding {newusr.Name} as {newusr.Lvl} ";
                // msg = "Success " + Core.AddUser(TxtNewName, TxtNewPass, UserLevel.censored, TxtPathsR, TxtPathsRW, TxtPathsRWX);

                TxtNewName = "";
                TxtNewPass = "";
                TxtNewPass2 = "";
                TxtPathsR = "";
                TxtPathsRW = "";
                TxtPathsRWX = "";

            }
            else
            {
                msg = "You are not the admin";
            }
        }
        else
        {
            msg = "Wrong admin user name / password";
        }

        StateHasChanged();
    }

    public void Remove(string name)
    {
        User usr = Core.Auth(TxtName, TxtPass);
        if (usr != null)
        {
            if (usr.Lvl == UserLevel.root)
            {
                if (name != usr.Name)
                {
                    Core.RemoveUser(name);
                    msg = $"Success Removing {name} ";
                }
                else
                {
                    msg = "You can't remove yourself";
                }
            }
            else
            {
                msg = "You are not the admin";
            }
        }
        else
        {
            msg = "Wrong admin user name / password";
        }

        StateHasChanged();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.JSInterop.IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.AspNetCore.Components.NavigationManager NavMan { get; set; }
    }
}
#pragma warning restore 1591
