@page "/ListFiles"
@inject Microsoft.AspNetCore.Components.NavigationManager NavMan
@using Microsoft.AspNetCore.Http
@using System.IO;
@namespace AirShare.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    Response.Headers.Clear();
    // HttpContext.Response.Clear();
    string url;

    try
    {

        //Console.WriteLine($"Partial Request {Request.Headers["Range"]}");

        string q = HttpContext.Request.QueryString.Value.TrimStart('?');

        url = Uri.UnescapeDataString(q.TrimStart('?')).Trim('"');


    }
    catch (Exception ex)
    {
        Console.WriteLine("ListFiles Path error " + ex.Message);
        await Response.WriteAsync("Path error " + ex.Message);
        return;
    }

    User usr;
    try
    {
        usr = Core.AuthReq(Request, Response);
        if (usr == null)
        {
            Console.WriteLine($"ListFiles not logged in ");
            await Response.WriteAsync("ListFiles not logged in");
            return;
        }

        if (!usr.Validate(url, FSPermission.Read))
        {
            Console.WriteLine($"OpenAudioStream {usr?.Name} ({usr?.Lvl}) cannot access {url}");
            await Response.WriteAsync("You cannot access this ");
            return;
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine("ListFiles Cookie Auth error " + ex.Message);
        await Response.WriteAsync("Auth error " + ex.Message);
        return;
    }


    try
    {
        await Response.WriteAsync(Core.ToJSON(FSService.ListFiles(url, usr)));
    }
    catch (Exception ex)
    {
        //TODO: Use more understandable err msgs
        Console.WriteLine("ListFiles Opening error " + url + " >> " + ex.Message);
        await Response.WriteAsync("Opening error " + url + " >> " + ex.Message);
        return;
    }



}
