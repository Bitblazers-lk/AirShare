@inject Microsoft.AspNetCore.Components.NavigationManager NavMan
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject UserData Userdata
@using AirShare;


@*<div class="form-group mb-3">
        <label>Input File</label>
        <input type="text" class="form-control">
    </div>

    <div class="form-group mb-3">
        <center>
            <video style="height:150px"></video>
        </center>
    </div>*@


<div class="height-card box-margin">
    <!-- Card -->
    <div class="card">
        <video class="card-img-top" src="@($"{NavMan.BaseUri}OpenVideoStream/{Uri.EscapeDataString(FileEntry.Name)}?" + Uri.EscapeDataString(System.IO.Path.Combine(Path, FileEntry.Name)))" controls></video>

        <div class="card-body text-center">
            <h5 class="mt-20">
                <a class="text-dark">@FileEntry.Name</a>
            </h5>

            <p class="card-text">Select Type And Quality To Convert Video...</p>
            @if (info == null)
            {
                <p class="card-text">
                    <button class="btn btn-sm btn-primary" @onclick="GetInfo">Get Info</button>
                </p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="file-ex table-borderless table-nowrap">
                        <thead>
                            <tr>
                                <th>Size</th>
                                <th>@Core.GetSizeString(info.Size)</th>
                            </tr>
                            <tr>
                                <th>Duration</th>
                                <th>@info.Duration</th>
                            </tr>
                            <tr>
                                <th>Codec</th>
                                <th>@info.VideoStreams?.FirstOrDefault().Codec</th>
                            </tr>
                            <tr>
                                <th>Framerate</th>
                                <th>@info.VideoStreams?.FirstOrDefault().Framerate FPS</th>
                            </tr>
                            <tr>
                                <th>Bitrate</th>
                                <th>@info.VideoStreams?.FirstOrDefault().Bitrate bits</th>
                            </tr>
                            <tr>
                                <th>StreamType</th>
                                <th>@info.VideoStreams?.FirstOrDefault().StreamType</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            }
            <hr>

            <div class="form-row">
                <div class="form-group col-md-@(SelType == "Video"?"6":"12")">
                    <label>Type</label>
                    <select class="form-control" @bind="SelType">
                        <option value="-" selected disabled>Choose Type</option>
                        <option value="Audio">Extract Audio</option>
                        <option value="Video">Download Video</option>
                    </select>
                </div>
                @if (SelType == "Video")
                {
                    <div class="form-group col-md-6">
                        <label>Quality</label>
                        <select class="form-control" @bind="SelQuality">
                            <option value="-" selected disabled>Choose Quality</option>
                            <option value="1080p">1080p</option>
                            <option value="720p">720p</option>
                            <option value="640p">640p</option>
                            <option value="360p">360p</option>
                            <option value="144p">144p</option>
                        </select>
                    </div>
                }
            </div>
            <div class="form-row">
                @if (SelType == "Audio" || SelType == "Video")
                {
                    <div class="form-group col-md-6">
                        <label>Format</label>
                        <select class="form-control" @bind="SelFormat">
                            <option value="-" selected disabled>Choose Format</option>
                            @if (SelType == "Audio")
                            {
                                <option value="MP3">MP3</option>
                                <option value="M4A">M4A</option>
                                <option value="OGG">OGG</option>
                            }
                            else if (SelType == "Video")
                            {
                                <option value="ORI">Original Format</option>
                            }
                        </select>
                    </div>
                }
                <div class="form-group col-md-@((SelType == "Audio" || SelType == "Video")?"6":"12")">
                    <label class="text-white">Convert</label>
                    <button class="btn btn-sm btn-warning text-white @((SelType == "Audio" || SelType == "Video")?"":"disabled") " style="width:100%" @onclick="Convert" >Convert</button>
                </div>
            </div>

            @*<div class="row align-items-center justify-content-between">
                    <div class="col-3">
                        <label>Type</label>
                        <select class="form-control" @bind="SelType">
                            <option value="-" selected>Choose Type</option>
                            <option value="Audio">Extract Audio</option>
                            <option value="Video">Download Video</option>
                        </select>
                    </div>
                    @if (SelType == "Video")
                    {
                        <div class="col-3">
                            <label>Quality</label>
                            <select class="form-control" @bind="SelQuality">
                                <option value="-" selected>Choose Quality</option>
                                <option value="1080p">1080p</option>
                                <option value="720p">720p</option>
                                <option value="640p">640p</option>
                                <option value="360p">360p</option>
                                <option value="144p">144p</option>
                            </select>
                        </div>
                    }
                    <div class="col-3">
                        <label>Format</label>
                        <select class="form-control" @bind="SelFormat">
                            <option value="-" selected>Choose Format</option>
                            @if (SelType == "Audio")
                            {
                                <option value="MP3">MP3</option>
                                <option value="M4A">M4A</option>
                                <option value="OGG">OGG</option>
                            }
                            else if (SelType == "Video")
                            {
                                <option value="ORI">Original Format</option>
                            }
                        </select>
                    </div>

                    <div class="col-3">
                        <label class="text-white">Convert</label>
                        <button class="btn btn-sm btn-warning text-white" @onclick="Convert">Convert</button>
                    </div>
                </div>*@
            <hr>
            @if (!string.IsNullOrWhiteSpace(FileUrl))
            {
                <div class="row align-items-center justify-content-between">
                    <div class="col-12">
                        <div class="input-group mb-0">
                            <input type="text" class="form-control" placeholder="File URL" readonly value="@FileUrl">
                            <div class="input-group-append">
                                <button class="btn btn-secondary" type="button"><i class="fa fa-copy"></i></button>
                                <a class="btn btn-success active" href="@FileUrl" target="_blank"><i class="fa fa-download"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@code {
    [Parameter] public string Path { get; set; }
    [Parameter] public FSEntry FileEntry { get; set; }
    IMediaInfo info;

    public string SelType
    {
        get
        {
            return _SelType;
        }
        set
        {
            _SelType = value;
            SelFormat = "-";
            SelQuality = "-";
        }
    }
    string _SelType;
    string FileUrl, SelFormat, SelQuality;

    string FileHashLink(string fp)
    {
        string fnme = System.IO.Path.GetFileName(fp);
        string ename = Uri.EscapeDataString(fnme);

        string H = HashLinks.AddFile(fp, 512);

        return $"{NavMan.BaseUri}hlnk/{ename}?{H}";
    }

    async void Convert()
    {
        if (SelType == "Audio")
        {
            string path = System.IO.Path.Combine(Environment.CurrentDirectory, @"Tmp\", System.IO.Path.ChangeExtension(FileEntry.Name, SelFormat.ToLower()));
            if (SelFormat == "MP3")
            {
                string s = System.IO.Path.Combine(Path, FileEntry.Name);
                var res = await AVC.ExtractAudio(s, path);
                FileUrl = FileHashLink(path);
            }

        }
        else if (SelType == "Video")
        {

        }
        StateHasChanged();
    }

    async void GetInfo()
    {
        info = await AVC.GetMediaInfo(System.IO.Path.Combine(Path, FileEntry.Name));
        StateHasChanged();
    }
}
