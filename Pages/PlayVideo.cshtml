@page "/PlayVideo/{PFileName}"
@inject Microsoft.AspNetCore.Components.NavigationManager NavMan
@using Microsoft.AspNetCore.Http
@using System.IO;
@namespace AirShare.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers




@{
    string RedirectPath = "/?PlayVideo/" + RouteData.Values["PFileName"] + HttpContext.Request.QueryString.Value;
    bool Failed = false;
    Dictionary<string, string> Subs = new Dictionary<string, string>();

    string vmime = "video/webm";

    try
    {
        User usr = Core.AuthReq(Request, Response);
        if (usr == null)
        {
            Console.WriteLine($"PlayVideo not logged in ");
            Failed = true;
        }

        string url;

        try
        {

            //Console.WriteLine($"Partial Request {Request.Headers["Range"]}");

            string q = HttpContext.Request.QueryString.Value.TrimStart('?');

            url = Uri.UnescapeDataString(q.TrimStart('?')).Trim('"');

            if (!usr.Validate(url, FSPermission.Read))
            {
                Console.WriteLine($"PlayVideo {usr?.Name} ({usr?.Lvl}) cannot access {url}");
                Failed = true;

            }
            else
            {
                DirectoryInfo PDInfo = System.IO.Directory.GetParent(url);
                foreach (FileInfo FI in PDInfo.EnumerateFiles())
                {
                    string ext = FI.Extension.ToLower();
                    if (ext == ".srt" || ext == ".vtt")
                    {
                        Subs.Add(System.IO.Path.GetFileName(FI.Name), FI.FullName);
                    }
                }
            }

            string vext = System.IO.Path.GetExtension(url).ToLower();
            if (!FSService.Ext2Mime.TryGetValue(vext, out vmime))
            {
                vmime = "video/webm";
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine("PlayVideo Path error " + ex.Message);
            Failed = true;
        }


    }
    catch (Exception ex)
    {
        Console.WriteLine("PlayVideo Cookie Auth error " + ex.Message);
        Failed = true;
    }


}


<html>

<head>
    <script lang="text/javascript">
        document.addEventListener("DOMContentLoaded", function () { var videoElements = document.getElementsByTagName('video'); function convertSrtToVtt() { this.id = '_' + Math.random().toString(36).substr(2, 9); var self = document.getElementById(this.id); var tracks = document.querySelectorAll("#" + this.id + " track"); var subtitle = { data: { track: {} }, load: function (track) { subtitle.track = track; if (subtitle.isSrt(subtitle.track.src)) { var client = new XMLHttpRequest(); client.open('GET', subtitle.track.src); client.onreadystatechange = function () { subtitle.convert(client.responseText).then(function (file) { subtitle.track.src = file }) }; client.send() } }, convert: function (content) { var promise = new Promise(function (resolve, reject) { content = content.replace(/(\d+:\d+:\d+)+,(\d+)/g, '$1.$2'); content = "WEBVTT - Generated using SRT2VTT\r\n\r\n" + content; var blob = new Blob([content], { type: 'text/vtt' }); var file = window.URL.createObjectURL(blob); resolve(file) }); return promise }, isSrt: function (filename) { return filename.split('.').pop().toLowerCase() === 'srt' ? !0 : !1 }, isVTT: function (filename) { return filename.split('.').pop().toLowerCase() === 'vtt' ? !0 : !1 } }; for (var i = 0; i < tracks.length; i++) { subtitle.load(tracks[i]) } }; for (var i = 0; i < videoElements.length; i++) { videoElements[i].addEventListener('loadstart', convertSrtToVtt) } });
    </script>
    <script src="https://cdn.plyr.io/3.6.4/plyr.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const player = Plyr.setup('.js-player');
        });
    </script>
    <title>Play Video</title>
    <link rel="stylesheet" href="https://cdn.plyr.io/3.5.6/plyr.css" />
</head>

<body style="margin:0px;background-color:rgb(23,27,38);">
    @if (Failed)
    {
        <a href="@RedirectPath">Click here to login</a>
    }
    else
    {
        <div style="border-radius: 5px; display: block; margin:auto;margin-top:15px; border: 2px solid #269d9d;width:80%">
        <video id="player" class="js-player" controls autoplay style="height:90%;">

            <source src="@("/OpenVideoStream/" +  RouteData.Values["PFileName"] + HttpContext.Request.QueryString.Value)"
                type="@vmime">

            @foreach (var item in Subs)
            {
                <track label="@item.Key" kind="subtitles" lang="en" src="/OpenStream/@(item.Key)?@(item.Value)" />
            }

            Your browser does not support the video tag.
        </video>
        </div>
    }
</body>

</html>